name: gollvm
on:
  workflow_dispatch:
  create:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
     
  build_by_tags: #in sense of CMake's identification - gollvm is indeed Clang oriented
    runs-on: ubuntu-20.04
    steps:      
      - uses: actions/checkout@v2
      - name: Get GCC's version
        run: gcc --version
      - name: Check our path
        run: pwd
      - name: Trying to check if we could install Ninja
        run: sudo apt install ninja-build -y
      - name: Checking the version of make, automake, autoconf, m4 and Ninja
        run: make --version && m4 --version && autoconf --version && automake --version && echo "Ninja's version is" && ninja --version
      - name: Clonning LLVM master branch && gollvm related repos.
        run:  cd $GITHUB_WORKSPACE/gollvm_build_process && git clone https://github.com/llvm/llvm-project.git && cd llvm-project && git reset --hard 09629215c272f09e3ebde6cc7eac9625d28910ff && cd ./llvm/tools && git clone https://go.googlesource.com/gollvm && cd gollvm && git reset --hard 0e34e09fc15cde73f1b9974f2a657360abb94b4f && git clone https://go.googlesource.com/gofrontend && cd gofrontend &&  git reset --hard 7f33baa09a8172bb2c5f1ca0435d9efe3e194c9b && cd .. && cd libgo && git clone https://github.com/libffi/libffi.git && cd libffi &&  git reset --hard ab1677106605aba1c27665964ff90bea59612ce3 && cd .. && git clone https://github.com/ianlancetaylor/libbacktrace.git && cd libbacktrace && git reset --hard 2446c66076480ce07a6bd868badcbceb3eeecc2e && cd ..
      - name: Compiling & linking gollvm
        run: cd $GITHUB_WORKSPACE/gollvm_build_process && mkdir build_release && cd build_release && cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD=X86 -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -G Ninja ../llvm-project/llvm && ninja -j16 gollvm && ninja GoBackendCoreTests && ./tools/gollvm/unittests/BackendCore/GoBackendCoreTests

  
#Getting back to LLVM project
